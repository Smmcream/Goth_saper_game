// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let playerClan = null;
let gameBoard = [];
let foundSymbols = 0;
let gameOver = false;
let musicPlaying = false;
let symbols = []; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤ –º–µ–∂–¥—É –∏–≥—Ä–∞–º–∏

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞–º–∏
function showScreen(screenId) {
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    document.getElementById(screenId).classList.add('active');
}

function showClanSelection() {
    showScreen('clanScreen');
}

function selectClan(clan) {
    playerClan = clan;
    const enemyClan = clan === 'üï∏Ô∏è' ? 'üíÄ' : 'üï∏Ô∏è';
    
    // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –∫–ª–∞–Ω–æ–≤
    document.querySelectorAll('.clan-option').forEach(option => {
        option.classList.remove('selected');
    });
    
    // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–ª–∞–Ω
    event.currentTarget.classList.add('selected');
    
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    document.getElementById('confirmClan').disabled = false;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –ø—Ä–∞–≤–∏–ª–∞—Ö
    document.getElementById('playerClanInfo').innerHTML = `
        <h4>–¢–≤–æ–π –∫–ª–∞–Ω: ${clan}</h4>
        <p>–¢–≤–æ–∏ —Å–∏–º–≤–æ–ª—ã: ${clan} | –í—Ä–∞–∂–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã: ${enemyClan}</p>
        <p><strong>–ù–∞–π–¥–∏ 5 —Å–≤–æ–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –ø–æ–±–µ–¥—ã!</strong></p>
    `;
}

function showRules() {
    if (!playerClan) return;
    showScreen('rulesScreen');
}

function startGame() {
    if (!playerClan) return;
    showScreen('gameScreen');
    initializeGame();
}

function showRulesFromGame() {
    showScreen('rulesScreen');
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—É–∑—ã–∫–æ–π
function toggleMusic() {
    const bgMusic = document.getElementById('bgMusic');
    const musicBtn = document.querySelector('.music-btn');
    const musicBtnSmall = document.querySelector('.music-btn-small');
    
    if (musicPlaying) {
        bgMusic.pause();
        musicPlaying = false;
        if (musicBtn) musicBtn.textContent = 'üîä –í–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É';
        if (musicBtnSmall) musicBtnSmall.textContent = 'üîá';
    } else {
        // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –º—É–∑—ã–∫—É
        bgMusic.play().then(() => {
            musicPlaying = true;
            if (musicBtn) musicBtn.textContent = 'üîä –í—ã–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É';
            if (musicBtnSmall) musicBtnSmall.textContent = 'üîä';
        }).catch(error => {
            console.log('–ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ:', error);
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
            if (window.innerWidth > 768) {
                alert('–ù–∞–∂–º–∏—Ç–µ "OK" —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –º—É–∑—ã–∫–∏ –µ—â–µ —Ä–∞–∑');
            }
        });
    }
}

// –ò–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞
function initializeGame() {
    const boardElement = document.getElementById('gameBoard');
    boardElement.innerHTML = '';
    
    // –°–æ–∑–¥–∞—ë–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
    gameBoard = [];
    foundSymbols = 0;
    gameOver = false;
    
    const enemyClan = playerClan === 'üï∏Ô∏è' ? 'üíÄ' : 'üï∏Ô∏è';
    
    // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è –∏–≥—Ä–∞ –∏–ª–∏ –∏–≥—Ä–æ–∫ –ø—Ä–æ–∏–≥—Ä–∞–ª - —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
    if (symbols.length === 0) {
        // –°–æ–∑–¥–∞—ë–º –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤: 5 —Å–≤–æ–∏—Ö, 4 –≤—Ä–∞–∂–µ—Å–∫–∏—Ö
        symbols = [
            playerClan, playerClan, playerClan, playerClan, playerClan,
            enemyClan, enemyClan, enemyClan, enemyClan
        ];
        
        // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –º–∞—Å—Å–∏–≤ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π –∏–≥—Ä—ã
        shuffleArray(symbols);
    }
    
    // –°–æ–∑–¥–∞—ë–º –∫–ª–µ—Ç–∫–∏
    for (let i = 0; i < 3; i++) {
        for (let j = 0; j < 3; j++) {
            const index = i * 3 + j;
            const cell = document.createElement('div');
            cell.className = 'cell';
            cell.dataset.row = i;
            cell.dataset.col = j;
            cell.dataset.symbol = symbols[index];
            cell.addEventListener('click', () => handleCellClick(cell));
            
            boardElement.appendChild(cell);
            gameBoard.push({
                element: cell,
                symbol: symbols[index],
                revealed: false
            });
        }
    }
    
    updateGameDisplay();
    showMessage("–ë–∏—Ç–≤–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è... –ó–∞–ø–æ–º–Ω–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤!");
}

function shuffleArray(array) {
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
    }
}

function handleCellClick(cell) {
    if (gameOver) return;
    
    const row = parseInt(cell.dataset.row);
    const col = parseInt(cell.dataset.col);
    const index = row * 3 + col;
    
    if (gameBoard[index].revealed) return;
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–ª–µ—Ç–∫—É
    gameBoard[index].revealed = true;
    cell.classList.add('revealed');
    cell.textContent = gameBoard[index].symbol;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (gameBoard[index].symbol === playerClan) {
        // –ù–∞–π–¥–µ–Ω —Å–≤–æ–π —Å–∏–º–≤–æ–ª
        foundSymbols++;
        
        if (foundSymbols === 5) {
            // –ü–æ–±–µ–¥–∞!
            gameOver = true;
            showVictory();
        } else {
            showMessage(`–û—Ç–ª–∏—á–Ω–æ! –ù–∞–π–¥–µ–Ω —Ç–≤–æ–π —Å–∏–º–≤–æ–ª! –û—Å—Ç–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ ${5 - foundSymbols}`);
        }
    } else {
        // –ù–∞–π–¥–µ–Ω –≤—Ä–∞–∂–µ—Å–∫–∏–π —Å–∏–º–≤–æ–ª - —Å–º–µ—Ä—Ç—å!
        gameOver = true;
        cell.classList.add('death');
        showDefeat();
    }
    
    updateGameDisplay();
}

function updateGameDisplay() {
    document.getElementById('foundSymbols').textContent = `${foundSymbols}/5`;
    
    const remaining = gameBoard.filter(cell => !cell.revealed).length;
    document.getElementById('remainingCells').textContent = remaining;
    
    document.getElementById('playerInfo').innerHTML = `
        –¢–≤–æ–π –∫–ª–∞–Ω: <span class="player-symbol">${playerClan}</span>
    `;
}

function showMessage(message) {
    document.getElementById('messageArea').textContent = message;
}

function showVictory() {
    const victoryMessages = [
        `üèÜ –í–ï–õ–ò–ö–ê–Ø –ü–û–ë–ï–î–ê! üèÜ –¢—ã –ø—Ä–∏–Ω—ë—Å —Å–ª–∞–≤—É –∫–ª–∞–Ω—É ${playerClan}!`,
        `üéâ –¢–†–ò–£–ú–§! üéâ ${playerClan} –ø—Ä–∞–≤—è—Ç –∑–∞–º–∫–æ–º!`,
        `‚ö° –ù–ï–í–ï–†–û–Ø–¢–ù–û! ‚ö° –¢—ã –ø–µ—Ä–µ–∂–∏–ª –≤—Å–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è!`
    ];
    
    const message = victoryMessages[Math.floor(Math.random() * victoryMessages.length)];
    
    document.getElementById('resultContent').innerHTML = `
        <h2 class="result-title">üèÜ –ü–û–ë–ï–î–ê! üèÜ</h2>
        <div class="result-message">
            <p>${message}</p>
            <p>–¢—ã –Ω–∞—à—ë–ª –≤—Å–µ 5 —Å–∏–º–≤–æ–ª–æ–≤ —Å–≤–æ–µ–≥–æ –∫–ª–∞–Ω–∞ –∏ –≤—ã–∂–∏–ª –≤ —ç—Ç–æ–π —Å–º–µ—Ä—Ç–µ–ª—å–Ω–æ–π –±–∏—Ç–≤–µ!</p>
            <p style="margin-top: 20px; font-size: 4em;">${playerClan}${playerClan}${playerClan}</p>
        </div>
        <button class="gothic-btn" onclick="newGameWithNewLayout()">‚öîÔ∏è –ù–æ–≤–∞—è –ë–∏—Ç–≤–∞</button>
    `;
    
    showScreen('resultScreen');
}

function showDefeat() {
    const defeatMessages = [
        `üíÄ –°–ú–ï–†–¢–ï–õ–¨–ù–ê–Ø –û–®–ò–ë–ö–ê! üíÄ –¢—ã –Ω–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ –≤—Ä–∞–∂–µ—Å–∫–∏–π —Å–∏–º–≤–æ–ª...`,
        `‚ö∞Ô∏è –ö–û–ù–ï–¶ –ë–ò–¢–í–´... ‚ö∞Ô∏è –í—Ä–∞–∂–µ—Å–∫–∏–π –∫–ª–∞–Ω —Ç–æ—Ä–∂–µ—Å—Ç–≤—É–µ—Ç...`,
        `üåë –¢–¨–ú–ê –ü–û–ì–õ–û–¢–ò–õ–ê... üåë –¢—ã –Ω–µ —Å–º–æ–≥ –∏–∑–±–µ–∂–∞—Ç—å –ª–æ–≤—É—à–∫–∏...`
    ];
    
    const message = defeatMessages[Math.floor(Math.random() * defeatMessages.length)];
    
    document.getElementById('resultContent').innerHTML = `
        <h2 class="result-title">üíÄ –ü–û–†–ê–ñ–ï–ù–ò–ï üíÄ</h2>
        <div class="result-message">
            <p>${message}</p>
            <p>–¢—ã –Ω–∞—à—ë–ª ${foundSymbols} –∏–∑ 5 –Ω—É–∂–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤...</p>
            <p>–ó–∞–ø–æ–º–Ω–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞!</p>
            <p style="margin-top: 20px; font-size: 4em;">üíÄ‚ö∞Ô∏èüåë</p>
        </div>
        <button class="gothic-btn" onclick="resetGame()">‚öîÔ∏è –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –°–Ω–æ–≤–∞</button>
    `;
    
    showScreen('resultScreen');
}

function resetGame() {
    // –ü—Ä–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–µ –ù–ï –º–µ–Ω—è–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤
    if (playerClan) {
        showScreen('gameScreen');
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ —Å —Ç–µ–º–∏ –∂–µ —Å–∏–º–≤–æ–ª–∞–º–∏
        restoreGameBoard();
    } else {
        showScreen('startScreen');
    }
}

function newGameWithNewLayout() {
    // –ü—Ä–∏ –ø–æ–±–µ–¥–µ —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
    symbols = [];
    if (playerClan) {
        startGame();
    } else {
        showScreen('startScreen');
    }
}

function restoreGameBoard() {
    const boardElement = document.getElementById('gameBoard');
    boardElement.innerHTML = '';
    
    gameBoard = [];
    foundSymbols = 0;
    gameOver = false;
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–µ—Ç–∫–∏ —Å —Ç–µ–º–∏ –∂–µ —Å–∏–º–≤–æ–ª–∞–º–∏
    for (let i = 0; i < 3; i++) {
        for (let j = 0; j < 3; j++) {
            const index = i * 3 + j;
            const cell = document.createElement('div');
            cell.className = 'cell';
            cell.dataset.row = i;
            cell.dataset.col = j;
            cell.dataset.symbol = symbols[index];
            cell.addEventListener('click', () => handleCellClick(cell));
            
            boardElement.appendChild(cell);
            gameBoard.push({
                element: cell,
                symbol: symbols[index],
                revealed: false
            });
        }
    }
    
    updateGameDisplay();
    showMessage("–ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞! –ó–∞–ø–æ–º–Ω–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤...");
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
showScreen('startScreen');